{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/message.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///ws (ignored)"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","messageService","title","message","chats","getChats","subscribe","data","window","setTimeout","elem","document","getElementById","scrollTop","scrollHeight","scrollTo","body","length","addChat","user","addUser","username","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","MessageService","_chats","_chatssub","socket","on","console","log","push","next","type","emit","asObservable","providedIn","environment","production","bootstrapModule","catch","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { MessageService } from './message.service';\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Techy-Chat';\r\n  message = '';\r\n  chats = [];\r\n  user;\r\n  username;\r\n    constructor(private messageService: MessageService) {\r\n      this.messageService.getChats().subscribe((data) => {\r\n        this.chats = data;\r\n        window.setTimeout(() => {\r\n          const elem = document.getElementById('scrolldiv');\r\n          elem.scrollTop = elem.scrollHeight;\r\n          window.scrollTo(0,document.body.scrollHeight);\r\n        }, 500);\r\n      });\r\n    }\r\n    addChat() {\r\n      if (this.message.length === 0) {\r\n        return;\r\n      }\r\n      this.messageService.addChat(this.message);\r\n      this.message = '';\r\n      window.setTimeout(()=>{\r\n        window.scrollTo(0,document.body.scrollHeight);\r\n      },100);\r\n    }\r\n\r\n    addUser(user) {\r\n      this.messageService.addUser(user);\r\n      this.username = user;\r\n    }\r\n}","<div class=\"container\">\n  <div class=\"topbar\">{{title}}\n    <a href=\"http://localhost:4200/\">\n        <img style=\"margin-right: 25px;\" align=right alt=\"Exit\" src=\"assets/img/exit.png\" \n        width=\"30\" height=\"30\">\n    </a>\n  </div>\n  <div *ngIf=\"!username\" class=\"usernamebox\">\n    <div class=\"user\">\n        <p style=\"padding-bottom: 10px; font-weight: bold;\">Who are you?</p>\n        <form (submit)=\"addUser(user)\">\n            <input type=\"text\" name=\"user\" [(ngModel)]=\"user\">\n            <button type=\"submit\">Join Chat</button>\n        </form>\n    </div>\n  </div>\n  <div *ngIf=\"username\" class=\"chatarea\">\n    <div style=\"min-height: 0; overflow: auto\" id=\"scrolldiv\">\n    <div *ngFor=\"let chat of chats; let i = index\" class=\"chat\" [class.notify]=\"chat.type == 'notify'\" [class.me]=\"chat.user == username\">\n      <p><span class=\"username\">{{chat.user}}</span>{{chat.message}}</p>\n    </div>\n    </div>\n  </div>\n  <div  *ngIf=\"username\" class=\"inputarea\">\n    <form (submit)=\"addChat()\">\n        <input class=\"textbox\" name=\"message\" [(ngModel)]=\"message\" type=\"text\" autofocus autocomplete=\"off\">\n        <button type=\"submit\" class=\"sendbutton\">Send</button>\n    </form>\n  </div>\n</div> ","import { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }","import { Injectable } from '@angular/core';\r\nimport * as io from 'socket.io-client';\r\nimport { Subject } from 'rxjs';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MessageService {\r\n  _chats = [];\r\n  _chatssub;\r\n  socket;\r\n  constructor() {\r\n    this._chatssub = new Subject<any[]>();\r\n    this.socket = io.connect();\r\n    this.socket.on('connect', () => {\r\n      console.log('connected to the server');\r\n    });\r\n    this.socket.on('message recieved', (data) => {\r\n      this._chats.push(data);\r\n      this._chatssub.next([...this._chats]);\r\n    });\r\n    this.socket.on('all messages', (data) => {\r\n      this._chats = [...data];\r\n      this._chatssub.next([...this._chats]);\r\n    });\r\n    this.socket.on('user connected', (data) => {\r\n      this._chats.push({message: `${data} connected`, type: 'notify'});\r\n      this._chatssub.next([...this._chats]);\r\n    });\r\n    this.socket.on('user disconnected', (data) => {\r\n      this._chats.push({message: `${data} disconnected`, type: 'notify'});\r\n      this._chatssub.next([...this._chats]);\r\n    });\r\n  }\r\n  addChat(message) {\r\n    this.socket.emit('new message', message);\r\n  }\r\n  addUser(user) {\r\n    this.socket.emit('new user', user);\r\n  }\r\n  getChats() {\r\n    return this._chatssub.asObservable();\r\n  }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"]}